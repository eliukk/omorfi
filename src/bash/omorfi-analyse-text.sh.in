#!/bin/bash
omorfidir="@prefix@/share/omorfi"
omorfifile="$omorfidir/omorfi-ftb3.analyse.hfst"
args=$@

function print_version() {
    echo "omorfi-analyse 0.2"
    echo "Copyright (c) 2014 Tommi A Pirinen"
    echo "Licence GPLv3: GNU GPL version 3 <http://gnu.org/licenses/gpl.html>"
    echo "This is free software: you are free to change and redistribute it."
    echo "There is NO WARRANTY, to the extent permitted by law."

}

function print_usage() {
    echo "Usage: $0 [OPTION] [FILENAME...]"
}

function print_help() {
    echo "Analyses running text using omorfi automata and hfst tools"
    echo
    echo "  -h, --help      Print this help dialog"
    echo "  -V, --version   Print version info"
    echo "  -v, --verbose   Print verbosely while processing"
    echo
    echo "If no FILENAMEs are given, input is read from standard input."
    echo "This program uses hfst-apertium-proc and, if found"
    echo "apertium-destxt, otherwise sed"
}


function check_omorfi() {
    if test ! -d "$omorfidir" ; then
        echo omorfi not found in $omorfidir
        exit 1
    fi
    if test ! -r "$omorfifile" ; then
        echo analyser not found in $omorfifile
        echo maybe you have disabled FTB3.1 or installation was incomplete?
        exit 1
    fi
    if test x$1 == xverbose ; then
        echo using $omorfifile as analyser
    fi
}
cleanup=cat
function check_cleaner() {
    if type -p apertium-destxt > /dev/null ; then
        cleanup=$(type -p apertium-destxt)
    elif type -p sed > /dev/null ; then
        sedexpr='s/[]@<>^$/\\{}[]/\\\0/g'
        cleanup="sed -e ${sedexpr}"
    fi
    if test x$1 = xverbose ; then
        echo cleaning with $cleanup
    fi
}

function analyse() {
    cat $@ | $cleanup | sed -e 's/\.\[\]//g'| @HPROC@ -x "$omorfifile"
}

if test x$1 == x-h -o x$1 == x--help ; then
    print_usage
    print_help
    exit 0
elif test x$1 == x-V -o x$1 == x--version ; then
    print_version
    exit 0
elif test x$1 == x-v -o x$1 == x--verbose ; then
    verbose=verbose
    shift 1
elif test ! -r $1 ; then
    echo "Cannot read from $1"
    print_usage
    exit 1
fi
check_omorfi $verbose
check_cleaner $verbose
analyse $@

